@mixin animation($animation, $duration, $iterations, $delay, $fillmode) {
    animation: $animation $duration linear $iterations;
    animation-delay: $delay;
    animation-fill-mode: $fillmode;
}

@mixin keyframe($name) {
    @keyframes #{$name} {
        @content
    }
}

@mixin styleboard($isTarget, $numOfColumns, $targetSize, $boardSize){
    @if $isTarget{
        display: grid;
        grid-template-columns: repeat($numOfColumns, 1fr);
        border: 1px solid rgb(73, 66, 66);
        background: rgba(206, 195, 195, 0.3);
        width: $targetSize;
        height: $targetSize;
        box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;
        margin-top: -15%;

        .square{
            border: 1px solid rgb(86, 83, 83, .5);
            border-radius: 1px;
            width: calc($targetSize / $numOfColumns);
            height: calc($targetSize / $numOfColumns);
            box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
        }
    }
    @else{
        display: grid;
        grid-template-columns: repeat($numOfColumns, 1fr);
        border: 4px solid rgb(73, 66, 66);
        background: rgba(206, 195, 195, 0.3);
        width: $boardSize;
        height: $boardSize;
        box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;

        .square{
            border: 1px solid rgb(86, 83, 83, .5);
            border-radius: 5px;
            width: calc($boardSize / $numOfColumns);
            height: calc($boardSize / $numOfColumns);
            box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
            cursor: pointer;
            &:hover{
                border: 1px rgb(255, 255, 255) solid;
            }
        }
    }
}